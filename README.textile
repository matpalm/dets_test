h1. tags

single_process - everything in single process
seperate_process - similarity in seperate process, but only one

h1. info

large  run over a 1000 movies, 5,010,439 ratings
medium run over a 100 movies,    837,303 ratings
use large

h1. single_process

write dets file (approx 64mb)
> erl -noshell -s main write_ratings

check timings for calcing first 10 similarity scores
> erl -noshell -s main calc 1 10 
18.890545999999997 s

procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
 0  0 239304 170252  67640 891996    0    0     0     4  907 3382  6  1 93  0
 0  0 239304 170320  67648 891988    0    0     0   136 1071 4176  8  1 91  0
 1  0 239304 168452  67664 892680    0    0     0   906 1008 4181 10  1 88  0
 1  0 239304 141368  67672 893508    0    0     0   927 1279 4076 27  8 65  0
 1  0 239304 147728  67672 893496    0    0     0     9 1275 3570 25  8 67  0
 1  0 239304 142232  67672 893496    0    0     0     4 1287 3682 25  7 68  0
 6  0 239304 156964  67672 893496    0    0     0     0 1258 3519 24  7 69  0
 1  0 239304 153312  67680 893488    0    0     0    68 1286 3817 25  7 68  0
 1  0 239304 155968  67680 893508    0    0     0    25 1299 3589 25  7 68  0
 2  0 239304 148648  67680 893508    0    0     0     0 1221 3436 24  7 69  0
 1  0 239304 153584  67696 893492    0    0     0    96 1225 3474 25  6 68  0
 3  0 239304 154640  67696 893508    0    0     0     8 1230 3504 26  6 68  0
 1  0 239304 150616  67696 893508    0    0     0     4 1220 3481 24  7 69  0
 2  0 239304 148272  67696 893508    0    0     0     0 1329 4011 24  8 67  0
 3  0 239304 148944  67696 893508    0    0     0    25 1187 3558 26  8 66  0
 1  0 239304 149928  67696 893524    0    0     0     0 1231 3354 28  6 66  0
 1  0 239304 146116  67704 893528    0    0     0   165 1279 3751 29  6 65  0
 1  0 239304 145652  67716 893520    0    0     0   204 1253 4198 27  5 68  0
 1  0 239304 150116  67716 893532    0    0     0     0 1154 3225 27  6 67  0
 3  0 239304 138160  67716 893532    0    0     0     0 1193 3459 25  6 68  0
 2  0 239304 149292  67716 893532    0    0     0     8 1210 3541 25  7 68  0
 2  0 239304 148516  67716 893532    0    0     0     0 1239 3863 25  7 68  0
 0  0 239304 153944  67716 893548    0    0     0    36  940 3772  8  1 90  0
 0  0 239304 168268  67716 893548    0    0     0     0  991 3801  9  0 91  0

checksum for calcing first 10 similarity scores (will use later for comparing correctness of impl)
> erl -noshell -s main checksum 1 10

check 1 551.5850313136399
check 2 705.608400913402
check 3 507.14840392700944
check 4 688.7464783643019
check 5 548.6595777565728
check 6 481.90211525650886
check 7 580.1885875931622
check 8 275.9495044398644
check 9 490.1373811764266
check 10 599.1407156521689

h1. seperate_process

write_ratings not required, same single dets file.

recheck checksums
> erl -noshell -s main checksum 1 10
all the same so algo correct

timing check
> erl -noshell -s main calc 1 10 
19.372995 s
not that much slower, probably just allowable variance

h1. multiple worker processes

change NUM_WORKERS in consts.hrl to reflect number of processors/cores

rewrite dets file
> erl -noshell -s main write_ratings

recheck checksums
> erl -noshell -s main checksum 1 10
all ok

timing check
> erl -noshell -s main calc 1 10 
15s, and only 30% used...

these are 4 processes in single node,
try 4 processes across four nodes

start 3 shells;
bash> erl -sname s2 -setcookie a
bash> erl -sname s3 -setcookie a
bash> erl -sname s4 -setcookie a

run app from
bash> erl -sname s1 -setcookie a -s main calc 1 10

same again, 30% total.
not 100% util?
where is the bottleneck?
i think there is too much messaging overhead and not enough raw calc going on.

